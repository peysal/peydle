/**
 * Build script to ease the pain.
 */

def rootWorkingFolder = [location :new File("").absolutePath]
def orchestra = [name: "orchestra"]
def dataRuntime = [name: "dataRuntime"]
def executionClient= [name: "executionClient"]
def testFolder = [name : "testFolder"]
def masterConfig = [rootWorkingFolder, orchestra, dataRuntime, executionClient, testFolder]

def setLocation = { config ->
    config.location = "$rootWorkingFolder.location/$config.name"
}

task myInit << {
    [orchestra, dataRuntime, executionClient, testFolder].each(setLocation)
}

task myConfig(dependsOn: "myInit") << {
    def header = "---My config---"
    println header
    masterConfig.each { config ->
        println config
    }
    header.size().times {print "-"}
}

task runTest(dependsOn: "myInit") << {
    def header = "---Commence run test---"
    println header
    def rootFolderOfTest = new File("$rootWorkingFolder.location/$testFolder.name")
    if(rootFolderOfTest.mkdirs()) {
        println "successfully created:$testFolder.name"
    }
    header.size().times {print "-"}
}

task cleanTest(dependsOn: "myInit") << {
    def header = "---Clean test---"
    println header
    def rootFolderOfTest = new File("$rootWorkingFolder.location/$testFolder.name")
    delete rootFolderOfTest

    header.size().times {print "-"}
}


